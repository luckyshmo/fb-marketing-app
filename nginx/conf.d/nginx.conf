# user       www www;  ## Default: nobody
# worker_processes  5;  ## Default: 1
# error_log  logs/error.log;
# pid        logs/nginx.pid;
# worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
    server {
        listen      80;
        server_name	targetted.online;
        return 301	https://targetted.online$request_uri;
        etag off;
    }

    server {
        listen	443 ssl;
        server_name  targetted.online;
        ssl_certificate     /etc/ssl/targetted_online.crt;
        ssl_certificate_key /etc/ssl/targetted_online.key;

        location / {
            proxy_pass http://127.0.0.1:3000;
        }

        location /index.html {
            proxy_pass http://127.0.0.1:3000;
        }
    #     gzip on;
    #     gzip_types text/plain application/javascript;
    # #    etag off;
    # #    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    # #    if_modified_since off;
    # #    expires off;

    #     proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    #     proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    #     proxy_set_header Host $host; # to forward the original host requested by the client

    #     location /index.html {
    #         proxy_pass http://127.0.0.1:3000/index.html;
    #     add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #     }

    #     location = / {
    #         rewrite ^ index.html;
    #     }

    #     location /extensions/ {
    #         proxy_intercept_errors on;
    #         proxy_pass http://10.0.120.8:9199/frontend/;
    #     }

    #     location / {
    #         proxy_intercept_errors on;
    #         proxy_pass http://10.0.120.8:9199/frontend/f-root/;
    #     }

    #     location /login {
    #         proxy_buffering off;
    #     proxy_pass http://127.0.0.1:3000/login;
    #     }
    #     location /main {
    #         proxy_buffering off;
    #     proxy_pass http://127.0.0.1:3000/main;
    #     }


    #     location /api {
    #         proxy_intercept_errors on;
    #         proxy_pass http://127.0.0.1:8080;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #     }
    #     # redirect to index.html on 404 for client-side routing
        error_page 404 =200 /index.html;
    }

}